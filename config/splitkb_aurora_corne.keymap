/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        lh_pht: left_positional_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-unless-interrupted";
            tapping-term-ms = <100>;                        // <---[[produces tap if held longer than tapping-term-ms]]
            quick-tap-ms = <200>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <5 6 7 8 9 10>;    // <---[[right-hand keys]]
        };

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        bhm: balanced_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;    // <---[[moderate duration]]
            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
    };
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // | ESC  |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |  -   |
            // | TAB  |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ALT  |
            //                    | RIS | BKS | GUI |   | LOW | SPC  | ENT |

            bindings = <
&kp ESC  &kp Q           &kp W               &kp E           &kp R             &kp T    &kp Y  &kp U              &kp I            &kp O        &kp P                    &kp MINUS
&kp TAB  &hm LALT A      &hm LCTRL S         &hm LGUI D      &hm LSHIFT F      &kp G    &kp H  &hm RSHIFT J       &hm RGUI K       &hm RCTRL L  &hm RALT SEMICOLON       &kp SQT
&none    &kp Z           &kp X               &kp C           &kp V             &kp B    &kp N  &kp M              &kp COMMA        &kp DOT      &kp FSLH                 &none
                                             &mo 2           &kp BSPC          &none    &mo 1  &kp SPACE          &kp ENTER
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  =   |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | - |
            // | CTRL |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |   |
            // | SHFT |  `  |  \  |     |     |     |   |  [  |  ]  |     |     |     |   |
            //                    | FUN | DEL | GUI |   |     |     |     |

            bindings = <
&kp EQUAL  &kp N1     &kp N2    &kp N3    &kp N4    &kp N5       &kp N6     &kp N7    &kp N8           &kp N9    &kp N0    &kp MINUS
&none      &kp EXCL   &kp AT    &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS  &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &none
&none      &kp GRAVE  &kp BSLH  &none     &none     &none        &kp LBKT   &kp RBKT  &none            &none     &none     &none
                                &to 3     &kp DEL   &none        &none      &none     &none
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |      |  F1  |  F2  |  F3  |  F4  |  F5  |   |  F6   |  F7   |  F8  |  F9  |  F10  | F11  |
            // | CTRL |      |      |      |      |      |   |  LFT  |  DWN  |  UP  |  RGT |       | CTRL |
            // | SHFT |  ALT |      |      |      |      |   |  HOM  |  PDN  |  PUP |  END |  ALT  | SHFT |
            //                      |      |      |      |   |       |       |      |

            bindings = <
&none  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5    &kp F6    &kp F7     &kp F8     &kp F9     &kp F10  &kp F11
&none  &none   &none   &none   &none   &none     &kp LEFT  &kp DOWN   &kp UP     &kp RIGHT  &none    &none
&none  &none   &none   &none   &none   &none     &kp HOME  &kp PG_DN  &kp PG_UP  &kp END    &none    &none
                       &none   &none   &none     &none     &none      &none
            >;
        };

        navi_layer {
            // -----------------------------------------------------------------------------------------
            // |      |  F1  |  F2  |  F3  |  F4  |  F5  |   |  F6   |  F7   |  F8  |  F9  |  F10  | F11  |
            // | CTRL |      |      |      |      |      |   |  LFT  |  DWN  |  UP  |  RGT |       | CTRL |
            // | SHFT |  ALT |      |      |      |      |   |  HOM  |  PDN  |  PUP |  END |  ALT  | SHFT |
            //                      |      |      |      |   |       |       |      |

            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none    &kp K_PP      &none         &none       &none  &none  &none
&bt BT_PRV    &bt BT_NXT    &none         &none         &none         &none    &kp C_PREV    &kp K_NEXT    &none       &none  &none  &none
&bt BT_CLR    &none         &none         &none         &none         &none    &kp C_VOL_UP  &kp C_VOL_DN  &kp K_MUTE  &none  &none  &none
                                          &none         &none         &none    &none         &none         &to 0
            >;
        };
    };
};
